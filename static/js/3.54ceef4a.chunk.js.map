{"version":3,"sources":["Components/Textarea.js","Components/Articles.js","Components/CompTags.js","Components/Messages.js","Components/MessagesContainer.js"],"names":["Textarea","props","linkTextarea","React","createRef","textColor","tags","react_default","a","createElement","className","id","placeholder","cols","rows","ref","type","onClick","action","handlerClickActionCreator","current","value","dispatch","Articles","style","backgroundColor","note3","note1","note2","CompTags","handlerTegActionCreator","tag","Messages","outputTegs","tegs","map","item","myTags","src_Components_CompTags","key","listNotes","filteredNotes","el","src_Components_Articles","myId","mytext","mydate","myColor","src_Components_Textarea","handlerResetActionCreator","compose","connect","state","notesPage","allTags","withAuthRedirect"],"mappings":"8NA4CeA,EArCE,SAACC,GACf,IAAIC,EAAeC,IAAMC,YACrBC,EAAYF,IAAMC,YAClBE,EAAOH,IAAMC,YAWjB,OACGG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAEZH,EAAAC,EAAAC,cAAA,YAAUE,GAAG,UACVC,YAAY,iHACZC,KAAK,MACLC,KAAK,IACLC,IAAKb,IACGK,EAAAC,EAAAC,cAAA,WAPd,eAUGF,EAAAC,EAAAC,cAAA,SAAOO,KAAK,QAAQD,IAAKV,IAV5B,8JAaGE,EAAAC,EAAAC,cAAA,SAAOO,KAAK,OAAOD,IAAKT,IAAOC,EAAAC,EAAAC,cAAA,WAE/BF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOO,QAzBhB,WACZ,IAAIC,EAASC,YACVjB,EAAakB,QAAQC,MACrBhB,EAAUe,QAAQC,MAClBf,EAAKc,QAAQC,OAEhBpB,EAAMqB,SAASJ,KAmBZ,oDAEAX,EAAAC,EAAAC,cAAA,aC1BMc,UAVE,SAACtB,GACf,OAAOM,EAAAC,EAAAC,cAAA,OACJC,UAAU,WACVc,MAAO,CAACC,gBAAiBxB,EAAMyB,QAC9BzB,EAAM0B,MAAMpB,EAAAC,EAAAC,cAAA,WAHT,qIAIsBR,EAAM2B,MAAMrB,EAAAC,EAAAC,cAAA,WACtCF,EAAAC,EAAAC,cAAA,cCQSoB,iBAbE,SAAC5B,GAMZ,OACGM,EAAAC,EAAAC,cAAA,UAAQQ,QALJ,WACV,IAAIC,EAASY,YAAwB7B,EAAM8B,KAC3C9B,EAAMqB,SAASJ,KAILjB,EAAM8B,OC8CJC,EAlDE,SAAC/B,GAEf,IAKIgC,EAAahC,EAAMiC,KAAKC,IAAI,SAACC,GACrB,GAAoB,KAAhBA,EAAKC,OACN,OACG9B,EAAAC,EAAAC,cAAC6B,EAAD,CACGP,IAAOK,EACPG,IAAOH,EACPd,SAAYrB,EAAMqB,aAKnCkB,EAAYvC,EAAMwC,cAAcN,IAAI,SAACO,GAC7B,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,CACJJ,IAAOG,EAAGE,KACVjB,MAASe,EAAGG,OACZjB,MAASc,EAAGI,OACZpB,MAASgB,EAAGK,YAM3B,OAEGxC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YAGdH,EAAAC,EAAAC,cAACuC,EAAD,CAAU1B,SAAYrB,EAAMqB,WAG5Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,yEAA0CuB,EAA1C,KAGA1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,UAAQQ,QAvCE,WAChB,IAAIC,EAAS+B,cACbhD,EAAMqB,SAASJ,KAqCT,oFAIHX,EAAAC,EAAAC,cAAA,WAAM+B,4BCpCAU,sBAASC,YAZF,SAACC,GACpB,MAAO,CACJlB,KAAMkB,EAAMC,UAAUC,QACtBb,cAAeW,EAAMC,UAAUZ,gBAGZ,SAACnB,GACvB,MAAO,CACJA,SAAUA,KAIuDiC,IAAxDL,CAA2ElB","file":"static/js/3.54ceef4a.chunk.js","sourcesContent":["// Задание 3: Теги для заметок. Уровень сложности: выше среднего\n// При создании заметки пользователь может указать список тегов для нее.\n// Затем, при нажатии на тег, должны отфильтровываться заметки с данным тегом.\nimport React from 'react'\nimport './Textarea.css'\nimport {handlerClickActionCreator} from './../redux/notesReducer.js'\n\nconst Textarea = (props) =>{\n   let linkTextarea = React.createRef();\n   let textColor = React.createRef();\n   let tags = React.createRef();\n   \n   let addNotes = () =>{\n      let action = handlerClickActionCreator(\n         linkTextarea.current.value,\n         textColor.current.value,\n         tags.current.value)\n      \n      props.dispatch(action)\n   }\n\n   return(\n      <div className=\"textarea\">\n\n         <textarea id=\"txtarea\"\n            placeholder=\"Введите вашу заметку\"\n            cols=\"110\"\n            rows=\"4\"\n            ref={linkTextarea}>\n         </textarea><br />\n\n         Select color\n         <input type=\"color\" ref={textColor} />\n\n         Добавьте теги к вашей заметке:\n         <input type=\"text\" ref={tags}/><br />\n\n         <button className=\"bttn\" onClick={addNotes}>Добавить\n         </button>\n         <hr />\n      </div>\n   )\n}\n\nexport default Textarea\n","import React from 'react'\nimport './Articles.css'\n\nconst Articles = (props) => {\n   return <div\n      className=\"articles\"\n      style={{backgroundColor: props.note3}}>\n      {props.note1}<br />\n      Время добавления записи: {props.note2}<br />\n      <hr />\n   </div>\n}\n\nexport default Articles\n","import React from 'react'\nimport './CompTags.css'\nimport {handlerTegActionCreator} from \"./../redux/notesReducer.js\"\n\nconst CompTags = (props) => {\n\nlet addTeg = () => {\n   let action = handlerTegActionCreator(props.tag)\n   props.dispatch(action)\n}\n      return(\n         <button onClick={addTeg}>\n            {props.tag}\n         </button>\n      )\n}\n\nexport default CompTags\n","import React from 'react'\nimport Textarea from \"./Textarea\"\nimport Articles from \"./Articles\"\nimport './Messages.css'\nimport CompTags from \"./CompTags\"\nimport {handlerResetActionCreator} from \"./../redux/notesReducer.js\"\n\n\nconst Messages = (props) => {\n   \n   let handlerReset = () => {\n      let action = handlerResetActionCreator()\n      props.dispatch(action)\n   }\n\n   let outputTegs = props.tegs.map((item) => {\n               if (item.myTags !== '')\n                  return (\n                     <CompTags\n                        tag = {item}\n                        key = {item}\n                        dispatch = {props.dispatch}\n                     />\n                  )\n            })\n\n   let listNotes = props.filteredNotes.map((el) => {\n               return <Articles\n                  key = {el.myId}\n                  note1 = {el.mytext}\n                  note2 = {el.mydate}\n                  note3 = {el.myColor}\n               />\n            })\n\n\n\n   return (\n\n      <div className = \"messages\" >\n\n         {/*-----------Поле ввода--------------- */}\n         <Textarea dispatch = {props.dispatch}/>\n\n         {/*---------------Cписок тегов---------------*/}\n         <div className=\"compTags\"> Теги заметок: {outputTegs} </div>\n\n         {/*---------------Кнопка сброса---------------*/}\n         <div className=\"buttunShowAll\">\n            <button onClick={handlerReset}>Отобразить все</button>\n         </div>\n\n         {/*---------------Cписок статей---------------*/}\n         <div>{listNotes}</div>\n      </div>\n   )\n}\n\nexport default Messages\n","import Messages from \"./Messages\"\nimport {connect} from 'react-redux'\nimport {withAuthRedirect} from './../hoc/AuthRedirect'\nimport {compose} from 'redux'\n\nlet MapStateToProps = (state) => {\n   return {\n      tegs: state.notesPage.allTags,\n      filteredNotes: state.notesPage.filteredNotes\n   }\n}\nlet MapDispatchToProps = (dispatch) => {\n   return {\n      dispatch: dispatch\n   }\n}\n\nexport default compose (connect (MapStateToProps, MapDispatchToProps), withAuthRedirect) (Messages)\n"],"sourceRoot":""}